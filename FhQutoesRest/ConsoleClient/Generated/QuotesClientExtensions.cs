// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Sve2.FhQuotes.Client.Proxy
{
    using Models;
    using Sve2.FhQuotes;
    using Sve2.FhQuotes.Client;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for QuotesClient.
    /// </summary>
    public static partial class QuotesClientExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static Stock GetStockBySmybol(this IQuotesClient operations)
            {
                return operations.GetStockBySmybolAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Stock> GetStockBySmybolAsync(this IQuotesClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetStockBySmybolWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='symbol'>
            /// </param>
            public static Stock GetStockBySmybol1(this IQuotesClient operations, string symbol)
            {
                return operations.GetStockBySmybol1Async(symbol).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='symbol'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Stock> GetStockBySmybol1Async(this IQuotesClient operations, string symbol, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetStockBySmybol1WithHttpMessagesAsync(symbol, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
