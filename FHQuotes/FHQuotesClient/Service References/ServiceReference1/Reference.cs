//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sve2.FHQuotes.Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stock", Namespace="http://schemas.datacontract.org/2004/07/Sve2.FhQuotes.Domain")]
    [System.SerializableAttribute()]
    public partial class Stock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quote", Namespace="http://schemas.datacontract.org/2004/07/Sve2.FhQuotes.Domain")]
    [System.SerializableAttribute()]
    public partial class Quote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Sve2.FHQuotes.Client.ServiceReference1.Stock StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Ask {
            get {
                return this.AskField;
            }
            set {
                if ((this.AskField.Equals(value) != true)) {
                    this.AskField = value;
                    this.RaisePropertyChanged("Ask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Bid {
            get {
                return this.BidField;
            }
            set {
                if ((this.BidField.Equals(value) != true)) {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sve2.FHQuotes.Client.ServiceReference1.Stock Stock {
            get {
                return this.StockField;
            }
            set {
                if ((object.ReferenceEquals(this.StockField, value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Sve2.FHQuotes.Interfaces", ConfigurationName="ServiceReference1.IQuotes")]
    public interface IQuotes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndCurrentPrice", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndCurrentPriceResponse")]
        decimal FIndCurrentPrice(string stokSymbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndCurrentPrice", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndCurrentPriceResponse")]
        System.Threading.Tasks.Task<decimal> FIndCurrentPriceAsync(string stokSymbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FindAllStockSymbols", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FindAllStockSymbolsResponse")]
        System.Collections.Generic.List<string> FindAllStockSymbols();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FindAllStockSymbols", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FindAllStockSymbolsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> FindAllStockSymbolsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FindStock", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FindStockResponse")]
        Sve2.FHQuotes.Client.ServiceReference1.Stock FindStock(string stokSymbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FindStock", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FindStockResponse")]
        System.Threading.Tasks.Task<Sve2.FHQuotes.Client.ServiceReference1.Stock> FindStockAsync(string stokSymbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FindCurrentQuote", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FindCurrentQuoteResponse")]
        Sve2.FHQuotes.Client.ServiceReference1.Quote FindCurrentQuote(string stocksymbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FindCurrentQuote", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FindCurrentQuoteResponse")]
        System.Threading.Tasks.Task<Sve2.FHQuotes.Client.ServiceReference1.Quote> FindCurrentQuoteAsync(string stocksymbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndQuoteInTImeRange", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndQuoteInTImeRangeResponse")]
        System.Collections.Generic.List<Sve2.FHQuotes.Client.ServiceReference1.Quote> FIndQuoteInTImeRange(string stockSymbol, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndQuoteInTImeRange", ReplyAction="http://Sve2.FHQuotes.Interfaces/IQuotes/FIndQuoteInTImeRangeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Sve2.FHQuotes.Client.ServiceReference1.Quote>> FIndQuoteInTImeRangeAsync(string stockSymbol, System.DateTime from, System.DateTime to);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuotesChannel : Sve2.FHQuotes.Client.ServiceReference1.IQuotes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuotesClient : System.ServiceModel.ClientBase<Sve2.FHQuotes.Client.ServiceReference1.IQuotes>, Sve2.FHQuotes.Client.ServiceReference1.IQuotes {
        
        public QuotesClient() {
        }
        
        public QuotesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuotesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuotesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuotesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal FIndCurrentPrice(string stokSymbol) {
            return base.Channel.FIndCurrentPrice(stokSymbol);
        }
        
        public System.Threading.Tasks.Task<decimal> FIndCurrentPriceAsync(string stokSymbol) {
            return base.Channel.FIndCurrentPriceAsync(stokSymbol);
        }
        
        public System.Collections.Generic.List<string> FindAllStockSymbols() {
            return base.Channel.FindAllStockSymbols();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> FindAllStockSymbolsAsync() {
            return base.Channel.FindAllStockSymbolsAsync();
        }
        
        public Sve2.FHQuotes.Client.ServiceReference1.Stock FindStock(string stokSymbol) {
            return base.Channel.FindStock(stokSymbol);
        }
        
        public System.Threading.Tasks.Task<Sve2.FHQuotes.Client.ServiceReference1.Stock> FindStockAsync(string stokSymbol) {
            return base.Channel.FindStockAsync(stokSymbol);
        }
        
        public Sve2.FHQuotes.Client.ServiceReference1.Quote FindCurrentQuote(string stocksymbol) {
            return base.Channel.FindCurrentQuote(stocksymbol);
        }
        
        public System.Threading.Tasks.Task<Sve2.FHQuotes.Client.ServiceReference1.Quote> FindCurrentQuoteAsync(string stocksymbol) {
            return base.Channel.FindCurrentQuoteAsync(stocksymbol);
        }
        
        public System.Collections.Generic.List<Sve2.FHQuotes.Client.ServiceReference1.Quote> FIndQuoteInTImeRange(string stockSymbol, System.DateTime from, System.DateTime to) {
            return base.Channel.FIndQuoteInTImeRange(stockSymbol, from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Sve2.FHQuotes.Client.ServiceReference1.Quote>> FIndQuoteInTImeRangeAsync(string stockSymbol, System.DateTime from, System.DateTime to) {
            return base.Channel.FIndQuoteInTImeRangeAsync(stockSymbol, from, to);
        }
    }
}
